user  nginx;
worker_processes  1; # 작업자 프로세스 수를 정의 CPU가 2개 이상의 코어라면 증가 권장

pid        /var/run/nginx.pid;
error_log /var/log/nginx/error.log notice;

events {                     
    worker_connections  1024; # 작업자 프로세스가 동시에 처리할 수 있는 접속 수를 정의

}                            

http {
    include       /etc/nginx/mime.types; #  파일 확장명과 MIME 타입 목록
    default_type  application/octet-stream;

    upstream docker-express {  # 여기서 정의해주면 아래 sever의 location/ 의 proxy_pass 에서 연결 # 서버 여러개를 넣어 로드 밸런싱(연결된 최소인 서버로 연결 또는 ip값 해쉬로 같은 서버에 연결)
        server patent_api:33301;  # port 33301은 컨테이너 내의 express의 포트로 다른 컨테이너에서 접근(즉, client -> nginx -> express) /  (client -> express 안됨)
    } # upstream 여러대의 컴퓨터가 순차적으로 어떤 일을 처리할 때 어떤 서비스를 받는 서버를 의미
      #  patent_api:33301의 api 서버는  업스트림 서버, Nginx는 DownStream 서버라고 할 수 있음


    server {
        listen 80;
        server_name localhost;

        location / {
		proxy_http_version 1.1;
            	proxy_pass         http://docker-express;
        }

    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
                                                
    sendfile        on;                                                                         
    keepalive_timeout  65;                                                                      
    include /etc/nginx/conf.d/*.conf;           
}
