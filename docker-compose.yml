version: "3"
services:
  proxy:
    build:
      context: ./proxy
    container_name: "${PROXY}"
    ports:
      - "${PROXY_PORT}:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/log:/var/log/nginx
    restart: "unless-stopped"
    depends_on:
      - express

  express:
    build:
      context: ./server
    container_name: "${EXPRESS}"
    expose:
      - "${EXPRESS_PORT}"
    restart: "unless-stopped"
    volumes:
      - ./server/logs:/usr/src/app/logs
    env_file:
      - ./.env
    depends_on:
      - mongo
      - mysql

  mongo:
    image: mongo
    restart: always
    container_name: "${MONGO}"
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/backup:/data/backup
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"

  mysql:
    image: mysql:8.0
    restart: always
    container_name: "${MYSQL}"
    ports:
      - "${MYSQL_EXTERNAL_PORT}:${MYSQL_PORT}"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Asia/Seoul
    command:
      - --lower_case_table_names=1
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mysql/data:/var/lib/mysql

  redis:
    image: redis:4.0.11-alpine
    container_name: "${REDIS}"
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    expose:
      - "${REDIS_PORT}"
